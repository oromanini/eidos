# ---- Estágio 1: Builder ----
FROM php:8.2-apache as builder
WORKDIR /var/www/html

# Instala dependências e extensões
RUN apt-get update && \
    apt-get install -y libzip-dev libonig-dev unzip git curl gnupg && \
    docker-php-ext-install pdo pdo_mysql opcache mbstring zip exif && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Instala Composer e Node.js
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN curl -sL https://deb.nodesource.com/setup_22.x | bash - && apt-get install -y nodejs

# Instala dependências do backend e frontend (NPM)
COPY composer.json composer.lock ./
RUN composer install --no-interaction --no-plugins --no-scripts --prefer-dist
COPY package.json package-lock.json ./
RUN npm install

# Copia o código e compila os assets
COPY . .
RUN npm run build

# ---- PASSO DE VERIFICAÇÃO ----
# Este comando vai listar o conteúdo da pasta de build ou falhar se ela não existir.
RUN ls -la public/build

# Otimiza o Composer para produção
RUN composer install --optimize-autoloader --no-dev

# ---- Estágio 2: Imagem Final ----
FROM php:8.2-apache
WORKDIR /var/www/html

# Instala apenas extensões PHP necessárias
RUN apt-get update && \
    apt-get install -y libzip-dev libonig-dev unzip && \
    docker-php-ext-install pdo pdo_mysql opcache mbstring zip exif && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copia os arquivos prontos do estágio "builder"
COPY --from=builder /var/www/html .

# Copia a configuração do Apache
COPY 000-default.conf /etc/apache2/sites-available/000-default.conf
RUN a2enmod rewrite

# Ajusta as permissões de TODOS os arquivos da aplicação
RUN chown -R www-data:www-data /var/www/html

EXPOSE 80
CMD ["apache2-foreground"]
